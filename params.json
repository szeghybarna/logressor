{"name":"Logressor","tagline":"converting log files to sqlite","body":"# logressor\r\n\r\nlogressor is a python script for convert log files to sqlite database based on regexp named groups. You can find more information on named groups [here](http://kblin.blogspot.com/2011/12/python-regexes-named-groups-cool.html). Our logressor related blog posts are available on [whiteshield blog](http://whiteshield.blog.com/) in [logressor category](http://whiteshield.blog.com/category/logressor/).\r\n\r\n## todo\r\n* multiline log processing\r\n* documentation :)\r\n\r\n\r\n## usage\r\n```\r\n> python logressor.py -h\r\nlogressor.py 0.4\r\nusage: logressor.py [-h] [--file FILE] [--regexp REGEXP] [--format FORMAT]\r\n                    [--remove FIELDLIST] [--logtype TYPE] [--list]\r\n                    [--sqlite SQLITEFILE] [--table [TABLE]] [-v] [-d] [--drop]\r\n                    [--vacuum]\r\n\r\nThis script is able to convert log files to sqlite format based \r\non regexp named group method.\r\n\r\noptional arguments:\r\n  -h, --help           show this help message and exit\r\n  --file FILE          log file to work on (or standard input, if parameter\r\n                       not given)\r\n  --regexp REGEXP      regexp with named groups to separate log values\r\n  --format FORMAT      format of named groups in parseable dict\r\n  --remove FIELDLIST   comma separated list of removabel fields\r\n  --logtype TYPE       predefined log type from logressor.dict or user.dict\r\n  --list               list predefined log types from logressor.dict or\r\n                       user.dict\r\n  --sqlite SQLITEFILE  the result sqlite file name (or standard output, if\r\n                       parameter not given)\r\n  --table [TABLE]      the table name in sqlite database\r\n  -v, --version\r\n  -d, --debug          debug (default: False)\r\n  --drop               drop table before create (default: False)\r\n  --vacuum             vacuum the database after inserts\r\n\r\nSample usage:\r\n Process sample 1)\r\n  python logressor.py \\\r\n    --file sample/s.log \\\r\n    --regexp \"^(?P<v1>.{15})\\s+(?P<v2>\\S+)\\s+(?P<v3>\\S+)*\" \\\r\n    --sqlite sample/output.sqlite \\\r\n    --format \"{'v1':{'type':'timestamp','format':'%b %d %H:%M:%S'},'v2':'real'}\" \\\r\n    --remove \"v3\" \\\r\n    --drop\r\n\r\n Process sample 2) (copy user.dict-sample to user.dict!)\r\n  python logressor.py --file sample/s.log --logtype sample --sqlite sample/output.sqlite --drop\r\n\r\n Process appache access.log\r\n  cat sample/access.log | python logressor.py --logtype apache --sqlite sample/output.sqlite --drop\r\n\r\n List defined log types\r\n  python logressor.py --list\r\n\r\n```","google":"UA-37811496-1","note":"Don't delete this file! It's used internally to help with page regeneration."}